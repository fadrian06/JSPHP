--- ✄ -----------------------
JSPHP:
  --- ✄ -----------------------
  JSString:
    ☐ Core behaviour
      ☐ Function constructor
        ☐ Array and object coercion
      ✔ Characters access with array access syntax @done (23-12-10 21:23)
      ✔ Return null for negative and out of range indexes @done (30/12/2023 16:46:07)
    ☐ Static methods
      ☐ String.fromCharCode()
      ☐ String.fromCodePoint()
      ☐ String.raw()
    ✔ Instance properties @done (05/01/2024 14:35:21)
      ✔ length property @done (23-12-30 14:43)
        ✔ Readonly constraint to length property @done (30/12/2023 16:37:49)
          ✔ Don't throw an error when attempt to reassign length property @done (30/12/2023 16:37:48)
    ☐ Instance methods
      ☐ String.at()
      ☐ String.charAt()
      ☐ String.charCodeAt()
      ☐ String.codePointAt()
      ☐ String.concat()
      ☐ String.endsWith()
      ☐ String.includes()
      ☐ String.indexOf()
      ☐ String.isWellFormed()
      ☐ String.lastIndexOf()
      ☐ String.localeCompare()
      ☐ String.match()
      ☐ String.matchAll()
      ☐ String.normalize()
      ☐ String.padEnd()
      ☐ String.padStart()
      ☐ String.repeat()
      ☐ String.replace()
      ☐ String.replaceAll()
      ☐ String.search()
      ☐ String.slice()
      ☐ String.split()
      ☐ String.startsWith()
      ☐ String.substring()
      ☐ String.toLocaleLowerCase()
      ☐ String.toLocaleUpperCase()
      ✔ String.toLowerCase() @done (6/12/2023, 0:45:36)
      ✔ String.toString() @done (23-12-30 16:12)
      ✔ String.toUpperCase() @done (6/12/2023, 0:45:33)
      ☐ String.toWellFormed()
      ✔ String.trim() @done (30/12/2023 16:53:34)
      ✔ String.trimEnd() @done (30/12/2023 16:53:38)
      ✔ String.trimStart() @done (30/12/2023 16:53:39)
      ✔ String.valueOf() @done (23-12-30 16:12)
  --- ✄ -----------------------
  JSRegExp:
    ☐ Instance properties
      ☐ RegExp.dotAll
      ☐ RegExp.flags
      ☐ RegExp.global
      ☐ RegExp.hasIndices
      ☐ RegExp.ignoreCase
      ☐ RegExp.multiline
      ☐ RegExp.source
      ☐ RegExp.sticky
      ☐ RegExp.unicode
      ☐ RegExp.unicodeSets
      ☐ RegExp.lastIndex
    ☐ Instance methods
      ☐ RegExp.exec()
      ☐ RegExp.test()
      ☐ RegExp.toString()
  --- ✄ -----------------------
  JSNumber:
    ☐ Static properties
      ☐ Number.EPSILON
      ☐ Number.MAX_SAFE_INTEGER
      ☐ Number.MAX_VALUE
      ☐ Number.MIN_SAFE_INTEGER
      ☐ Number.NEGATIVE_INFINITY
      ☐ Number.POSITIVE_INFINITY
    ☐ Static methods
      ☐ Number.isFinite()
      ☐ Number.isInteger()
      ☐ Number.isNaN()
      ☐ Number.isSafeInteger()
      ☐ Number.parseFloat()
      ☐ Number.parseInt()
    ☐ Instance methods
      ☐ Number.toExponential()
      ☐ Number.toFixed()
      ☐ Number.toLocaleString()
      ☐ Number.toPrecision()
      ☐ Number.toString()
      ☐ Number.valueOf()
  --- ✄ -----------------------
  JSArray:
    ☐ Core behaviour
      ☐ Posibility of add items and support different data types, (like a PHP Array)
      ☐ Support for access elements with an non negative integer index
        ☐ Integers as a string must be accepted too
      ☐ Support for zero-indexed (like a Python list)
      ☐ Support for shallow copies
    ☐ Static methods
      ☐ Array.from()
      ☐ Array.fromAsync()
      ☐ Array.isArray()
      ☐ Array.of()
    ☐ Instance properties
      ☐ Array.length
        ☐ Posibility of change the length property and create undefined slots or delete elements if it's necessary
    ☐ Instance methods
      ☐ Array.at()
      ☐ Array.concat()
      ☐ Array.copyWithin()
      ☐ Array.entries()
      ☐ Array.every()
      ☐ Array.fill()
      ☐ Array.filter()
      ☐ Array.find()
      ☐ Array.findIndex()
      ☐ Array.findLast()
      ☐ Array.findLastIndex()
      ☐ Array.flat()
      ☐ Array.flatMap()
      ☐ Array.forEach()
      ☐ Array.includes()
      ☐ Array.indexOf()
      ☐ Array.join()
      ☐ Array.keys()
      ☐ Array.lastIndexOf()
      ☐ Array.map()
      ☐ Array.pop()
      ☐ Array.push()
      ☐ Array.reduce()
      ☐ Array.reduceRight()
      ☐ Array.reverse()
      ☐ Array.shift()
      ☐ Array.slice()
      ☐ Array.some()
      ☐ Array.sort()
      ☐ Array.splice()
      ☐ Array.toLocaleString()
      ☐ Array.toReversed()
      ☐ Array.toSorted()
      ☐ Array.toSpliced()
      ☐ Array.toString()
      ☐ Array.unshift()
      ☐ Array.values()
      ☐ Array.with()
  --- ✄ -----------------------
  JSON:
    ☐ Core behaviour
      ✔ Make class no instantiable @done (23-12-10 19:20)
    ☐ Static methods
      ☐ JSON.parse()
        ☐ reviver parameter
          ☐ Run the reviver param with keys recursively iteration
        ✔ Create test for other data types (currently only test for strings) @done (4/12/2023, 20:50:09)
      ☐ JSON.stringify()
        ✔ String.method signature overload for the replacer param @done (23-12-30 14:26)
  --- ✄ -----------------------
  Math:
    ✔ Core behaviour @done (05/01/2024 14:41:14)
      ✔ Make class no instantiable @done (05/01/2024 14:41:09)
    ☐ Static properties
      ☐ Math.E
      ☐ Math.LN10
      ☐ Math.LN2
      ☐ Math.LOG10E
      ☐ Math.LOG2E
      ☐ Math.PI
      ☐ Math.SQRT1_2
      ☐ Math.SQRT2
    ☐ Static methods
      ☐ Math.abs()
      ☐ Math.acos()
      ☐ Math.acosh()
      ☐ Math.asin()
      ☐ Math.asinh()
      ☐ Math.atan()
      ☐ Math.atan2()
      ☐ Math.cbrt()
      ☐ Math.ceil()
      ☐ Math.clz32()
      ☐ Math.cos()
      ☐ Math.cosh()
      ☐ Math.exp()
      ☐ Math.expm1()
      ☐ Math.floor()
      ☐ Math.fround()
      ☐ Math.fmul()
      ☐ Math.log()
      ☐ Math.log10()
      ☐ Math.log1p()
      ☐ Math.log2()
      ☐ Math.max()
      ☐ Math.min()
      ☐ Math.pow()
      ☐ Math.random()
      ☐ Math.round()
      ☐ Math.sign()
      ☐ Math.sin()
      ☐ Math.sinh()
      ☐ Math.sqrt()
      ☐ Math.tan()
      ☐ Math.tanh()
      ☐ Math.trunc()
  --- ✄ -----------------------
  console:
    ☐ Instance methods
      ☐ console.assert()
      ☐ console.clear()
      ☐ console.count()
      ☐ console.countReset()
      ☐ console.debug()
      ☐ console.dir()
      ☐ console.dirxml()
      ☐ console.error()
      ☐ console.group()
      ☐ console.groupCollapsed()
      ☐ console.groupEnd()
      ☐ console.info()
      ☐ console.log()
      ☐ console.table()
      ☐ console.time()
      ☐ console.timeEnd()
      ☐ console.timeLog()
      ☐ console.trace()
      ☐ console.warn()
  --- ✄ -----------------------
  ✔ undefined constant @done (23-12-10 21:20)
  Global functions:
    ☐ parseInt()
    ☐ parseFloat()

Tests:
  ☐ Write all javaScript tests
  ☐ Test against unexpected argument types on all classes
  ✔ Test toLowerCase() @done (30/12/2023 16:47:45)
  ✔ Test toUpperCase() @done (30/12/2023 16:47:44)
  ☐ Test abs() method
